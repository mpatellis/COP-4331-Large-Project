{"version":3,"sources":["components/Navigator.js","components/Content.js","components/Header.js","components/Main.js","App.js","serviceWorker.js","index.js","components/imgs/FixThisLogoSimple.png"],"names":["categories","id","children","icon","active","withStyles","theme","categoryHeader","paddingTop","spacing","paddingBottom","categoryHeaderPrimary","color","palette","common","white","item","backgroundColor","itemCategory","boxShadow","firebase","fontSize","itemPrimary","itemIcon","minWidth","marginRight","divider","marginTop","props","classes","other","Drawer","variant","List","disablePadding","ListItem","className","clsx","img","alt","src","logo","width","height","map","Fragment","key","ListItemText","primary","childId","button","itemActiveItem","ListItemIcon","Divider","paper","maxWidth","margin","overflow","searchBar","borderBottom","searchInput","typography","block","display","addUser","contentWrapper","Paper","AppBar","position","elevation","Toolbar","Grid","container","alignItems","xs","TextField","fullWidth","placeholder","InputProps","disableUnderline","Button","Typography","align","secondaryBar","zIndex","menuButton","marginLeft","iconButtonAvatar","padding","link","textDecoration","borderColor","onDrawerToggle","React","useState","anchorEl","setAnchorEl","open","Boolean","undefined","Hidden","smUp","IconButton","aria-label","onClick","Tooltip","title","event","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","component","Copyright","Date","getFullYear","createMuiTheme","light","main","dark","h5","fontWeight","letterSpacing","shape","borderRadius","MuiTab","disableRipple","mixins","toolbar","minHeight","overrides","MuiDrawer","MuiButton","label","textTransform","contained","MuiTabs","root","indicator","borderTopLeftRadius","borderTopRightRadius","breakpoints","up","MuiIconButton","MuiTooltip","tooltip","MuiDivider","MuiListItemText","fontWeightMedium","MuiListItemIcon","MuiAvatar","drawerWidth","styles","drawer","flexShrink","app","flex","flexDirection","background","footer","mobileOpen","setMobileOpen","handleDrawerToggle","ThemeProvider","CssBaseline","implementation","PaperProps","style","xsDown","App","exact","path","Main","Component","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.88c88651.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport DnsRoundedIcon from '@material-ui/icons/DnsRounded';\r\nimport PermMediaOutlinedIcon from '@material-ui/icons/PhotoSizeSelectActual';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport SettingsEthernetIcon from '@material-ui/icons/SettingsEthernet';\r\nimport SettingsInputComponentIcon from '@material-ui/icons/SettingsInputComponent';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport PhonelinkSetupIcon from '@material-ui/icons/PhonelinkSetup';\r\nimport logo from './imgs/FixThisLogoSimple.png'; \r\n\r\nconst categories = [\r\n  {\r\n    id: 'Reports',\r\n    children: [\r\n      { id: 'Featured', icon: <StarBorderIcon />, active: true },\r\n      { id: 'Following', icon: <PeopleIcon /> },\r\n      { id: 'New', icon: <NewReleasesIcon /> },\r\n      { id: 'Search', icon: <SearchIcon /> },\r\n    ],\r\n  },\r\n  {\r\n    id: 'Account',\r\n    children: [\r\n      { id: 'Subscriptions', icon: <PaymentIcon /> },\r\n      { id: 'Status', icon: <InfoIcon /> },\r\n      { id: 'Settings', icon: <SettingsIcon /> },\r\n    ],\r\n  },\r\n];\r\n\r\nconst styles = theme => ({\r\n  categoryHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  categoryHeaderPrimary: {\r\n    color: theme.palette.common.white,\r\n  },\r\n  item: {\r\n    paddingTop: 1,\r\n    paddingBottom: 1,\r\n    color: 'rgba(255, 255, 255, 0.7)',\r\n    '&:hover,&:focus': {\r\n      backgroundColor: '#f09713', //orange\r\n    },\r\n  },\r\n  itemCategory: {\r\n    backgroundColor: '#262525', //black\r\n    boxShadow: '0 -1px 0 #f09713 inset',\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  firebase: {\r\n    fontSize: 24,\r\n    color: theme.palette.common.white,\r\n  },\r\n  itemPrimary: {\r\n    fontSize: 'inherit',\r\n  },\r\n  itemIcon: {\r\n    minWidth: 'auto',\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n});\r\n\r\nfunction Navigator(props) {\r\n  const { classes, ...other } = props;\r\n\r\n  return (\r\n    <Drawer variant=\"permanent\" {...other}>\r\n      <List disablePadding>\r\n        <ListItem className={clsx(classes.firebase, classes.itemCategory)}>\r\n          <img className={classes.img} alt=\"FixThis\" src={logo} width=\"200\" height=\"65\"/>\r\n        </ListItem>\r\n        {categories.map(({ id, children }) => (\r\n          <React.Fragment key={id}>\r\n            <ListItem className={classes.categoryHeader}>\r\n              <ListItemText\r\n                classes={{\r\n                  primary: classes.categoryHeaderPrimary,\r\n                }}\r\n              >\r\n                {id}\r\n              </ListItemText>\r\n            </ListItem>\r\n            {children.map(({ id: childId, icon, active }) => (\r\n              <ListItem\r\n                key={childId}\r\n                button\r\n                className={clsx(classes.item, active && classes.itemActiveItem)}\r\n              >\r\n                <ListItemIcon className={classes.itemIcon}>{icon}</ListItemIcon>\r\n                <ListItemText\r\n                  classes={{\r\n                    primary: classes.itemPrimary,\r\n                  }}\r\n                >\r\n                  {childId}\r\n                </ListItemText>\r\n              </ListItem>\r\n            ))}\r\n\r\n            <Divider className={classes.divider} />\r\n          </React.Fragment>\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nNavigator.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Navigator);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    maxWidth: 1236,\r\n    margin: 'auto',\r\n    overflow: 'hidden',\r\n  },\r\n  searchBar: {\r\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\r\n  },\r\n  searchInput: {\r\n    fontSize: theme.typography.fontSize,\r\n  },\r\n  block: {\r\n    display: 'block',\r\n  },\r\n  addUser: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  contentWrapper: {\r\n    margin: '40px 16px',\r\n  },\r\n});\r\n\r\nfunction Content(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <AppBar className={classes.searchBar} position=\"static\" color=\"default\" elevation={0}>\r\n        <Toolbar>\r\n          <Grid container spacing={2} alignItems=\"center\">\r\n            <Grid item>\r\n              <SearchIcon className={classes.block} color=\"inherit\" />\r\n            </Grid>\r\n            <Grid item xs>\r\n              <TextField\r\n                fullWidth\r\n                placeholder=\"Search by location, address, or zone ID\"\r\n                InputProps={{\r\n                  disableUnderline: true,\r\n                  className: classes.searchInput,\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <Button variant=\"contained\" color=\"primary\" className={classes.addUser}>\r\n                Search\r\n              </Button>              \r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.contentWrapper}>\r\n        <Typography color=\"textSecondary\" align=\"center\">\r\n          No zones found\r\n        </Typography>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nContent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Content);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Link from '@material-ui/core/Link';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst lightColor = 'rgba(255, 255, 255, 0.7)';\r\n\r\nconst styles = theme => ({\r\n  secondaryBar: {\r\n    zIndex: 0,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -theme.spacing(1),\r\n  },\r\n  iconButtonAvatar: {\r\n    padding: 4,\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: lightColor,\r\n    '&:hover': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n  button: {\r\n    borderColor: lightColor,\r\n  },\r\n});\r\n\r\nfunction Header(props) {\r\n  const { classes, onDrawerToggle } = props;\r\n  const [isLogedIn, setIsLogedIn] = React.useState(false)\r\n  const [hasAccount, setHasAccount] = React.useState(true)\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const handleClick = event => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar color=\"primary\" position=\"sticky\" elevation={0}>\r\n        <Toolbar>\r\n          <Grid container spacing={1} alignItems=\"center\">\r\n            <Hidden smUp>\r\n              <Grid item>\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  aria-label=\"open drawer\"\r\n                  onClick={onDrawerToggle}\r\n                  className={classes.menuButton}\r\n                >\r\n                  <MenuIcon />\r\n                </IconButton>\r\n              </Grid>\r\n            </Hidden>\r\n            <Grid item xs />\r\n            <Grid item>\r\n              <Tooltip title=\"Alerts • No alerts\">\r\n                <IconButton color=\"inherit\">\r\n                  <NotificationsIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton color=\"inherit\" onClick={handleClick}>\r\n                <PersonIcon />\r\n              </IconButton>\r\n              <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n              >\r\n                <List component=\"log\">\r\n                      <ListItem button>\r\n                        <ListItemText primary=\"Log In\" />\r\n                      </ListItem>\r\n                      <ListItem button>\r\n                        <ListItemText primary=\"Sign Up\" />\r\n                      </ListItem>\r\n                </List>\r\n              </Popover>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppBar\r\n        component=\"div\"\r\n        className={classes.secondaryBar}\r\n        color=\"primary\"\r\n        position=\"static\"\r\n        elevation={0}\r\n      >\r\n        <Toolbar>\r\n          <Grid container alignItems=\"center\" spacing={1}>\r\n            <Grid item xs>\r\n              <Typography color=\"inherit\" variant=\"h5\" component=\"h1\">\r\n                Search\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppBar\r\n        component=\"div\"\r\n        className={classes.secondaryBar}\r\n        color=\"primary\"\r\n        position=\"static\"\r\n        elevation={0}\r\n      >\r\n       \r\n      </AppBar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  onDrawerToggle: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Header);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createMuiTheme, ThemeProvider, withStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport Navigator from './Navigator';\r\nimport Content from './Content';\r\nimport Header from './Header';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nlet theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: '#63ccff',\r\n      main: '#f09713',\r\n      dark: '#006db3',\r\n    },\r\n  },\r\n  typography: {\r\n    h5: {\r\n      fontWeight: 500,\r\n      fontSize: 26,\r\n      letterSpacing: 0.5,\r\n    },\r\n  },\r\n  shape: {\r\n    borderRadius: 8,\r\n  },\r\n  props: {\r\n    MuiTab: {\r\n      disableRipple: true,\r\n    },\r\n  },\r\n  mixins: {\r\n    toolbar: {\r\n      minHeight: 48,\r\n    },\r\n  },\r\n});\r\n\r\ntheme = {\r\n  ...theme,\r\n  overrides: {\r\n    MuiDrawer: {\r\n      paper: {\r\n        backgroundColor: '#262525',\r\n      },\r\n    },\r\n    MuiButton: {\r\n      label: {\r\n        textTransform: 'none',\r\n      },\r\n      contained: {\r\n        boxShadow: 'none',\r\n        '&:active': {\r\n          boxShadow: 'none',\r\n        },\r\n      },\r\n    },\r\n    MuiTabs: {\r\n      root: {\r\n        marginLeft: theme.spacing(1),\r\n      },\r\n      indicator: {\r\n        height: 3,\r\n        borderTopLeftRadius: 3,\r\n        borderTopRightRadius: 3,\r\n        backgroundColor: theme.palette.common.white,\r\n      },\r\n    },\r\n    MuiTab: {\r\n      root: {\r\n        textTransform: 'none',\r\n        margin: '0 16px',\r\n        minWidth: 0,\r\n        padding: 0,\r\n        [theme.breakpoints.up('md')]: {\r\n          padding: 0,\r\n          minWidth: 0,\r\n        },\r\n      },\r\n    },\r\n    MuiIconButton: {\r\n      root: {\r\n        padding: theme.spacing(1),\r\n      },\r\n    },\r\n    MuiTooltip: {\r\n      tooltip: {\r\n        borderRadius: 4,\r\n      },\r\n    },\r\n    MuiDivider: {\r\n      root: {\r\n        backgroundColor: '#f09713',\r\n      },\r\n    },\r\n    MuiListItemText: {\r\n      primary: {\r\n        fontWeight: theme.typography.fontWeightMedium,\r\n      },\r\n    },\r\n    MuiListItemIcon: {\r\n      root: {\r\n        color: 'inherit',\r\n        marginRight: 0,\r\n        '& svg': {\r\n          fontSize: 20,\r\n        },\r\n      },\r\n    },\r\n    MuiAvatar: {\r\n      root: {\r\n        width: 32,\r\n        height: 32,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst drawerWidth = 256;\r\n\r\nconst styles = {\r\n  root: {\r\n    display: 'flex',\r\n    minHeight: '100vh',\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  app: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  main: {\r\n    flex: 1,\r\n    padding: theme.spacing(6, 4),\r\n    background: '#eaeff1',\r\n  },\r\n  footer: {\r\n    padding: theme.spacing(1),\r\n\r\n  },\r\n};\r\n\r\nfunction Main(props) {\r\n  const { classes } = props;\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <nav className={classes.drawer}>\r\n          <Hidden smUp implementation=\"js\">\r\n            <Navigator\r\n              PaperProps={{ style: { width: drawerWidth } }}\r\n              variant=\"temporary\"\r\n              open={mobileOpen}\r\n              onClose={handleDrawerToggle}\r\n            />\r\n          </Hidden>\r\n          <Hidden xsDown implementation=\"css\">\r\n            <Navigator PaperProps={{ style: { width: drawerWidth } }} />\r\n          </Hidden>\r\n        </nav>\r\n        <div className={classes.app}>\r\n          <Header onDrawerToggle={handleDrawerToggle} />\r\n          <main className={classes.main}>\r\n            <Content />\r\n          </main>\r\n          <footer className={classes.footer}>\r\n            <Copyright />\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nMain.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Main);","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Main from './components/Main'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Route exact path=\"/\" component={Main} />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register (config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","module.exports = __webpack_public_path__ + \"static/media/FixThisLogoSimple.9a042ace.png\";"],"sourceRoot":""}